#sidebar SortedSetCommandsSidebar

= ZINCRBY _key_ _increment_ _member_ (Redis >= 1.1) =
_Time complexity O(log(N)) with N being the number of elements in the sorted set_

 If _member_ already exists in the sorted set adds the _increment_ to its score
 and update the position of the element in the sorted set accordingly.
 If _member_ does not already exist in the sorted set it is added with
 _increment_ as score (that is, like if the previous score was virtually zero).
 If _key_ does not exist a new sorted set with the specified
 _member_ as sole member is crated. If the key exists but does not hold a
 sorted set value an error is returned.

 The score value can be the string representation of a double precision floating
 point number. It's possible to provide a negative value to perform a decrement.

 For an introduction to sorted sets check the [IntroductionToRedisDataTypes Introduction to Redis data types] page.

== Return value ==

[ReplyTypes Integer reply], specifically:

{{{
The score of _member_ after the increment is performed.
}}}
