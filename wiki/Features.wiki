#summary Features [DRAFT]
#labels features,speed,ansic,memory,datatypes

== Speed ==

Redis is written in ANSI C, and the the whole dataset taken in memory so it is wicked *_fast_*! Up to 110,000 SETs/second, 81,000 GETs/second can be accomplished in an entry level Linux box. Read more about Redis [Speed].

== Persistence ==

While all the data livesin memory, changes are _asynchronously_ saved on disk using flexible policies based on time elapsed and/or number of updates since last save. 

If you can't afford losing some data, starting on [RoadMap version 1.1] Redis will support an append-only file persistence mode. Check more on [Persistence]

== Support for Data Structures ==

Values in Redis can be [Strings] as in a conventional key-value store, but also [Lists], [Sets], and [OrderedSets] (to be support in [RoadMap version 1.1]). All this data types can be manipulated with atomic operations to push/pop elements, add/remove elements, perform server side union, intersection, difference between sets, and so forth. Redis supports different kind of sorting abilities for [Sets] and [Lists].

You can think in Redis as a *Data Structures Server*, that allows you to model non trivial problems. Read [DataTypes Data Types] to learn more about the way Redis handle [Strings], and the [Commands] supported by [Lists], [Sets] and [OrderedSets]

== Variety of Supported Languages  ==

Ruby, Python, Twisted Python, PHP, Erlang, Tcl, Perl, Lua, Java, Scala, Clojure, choose your poison. Check the list of [SupportedLanguages Supported Languages] for all the details.

If your favorite language is not supported yet, you can write your own client library, as the [ProtocolSpecification Protocol] is pretty simple.

== Master/Slave Replication ==

Redis supports a very simple and fast Master/Slave replication. Is so simple it takes only one line in the cofiguration file to sett it up, and 21 seconds for a Slave to complete the initial sync of 10 MM keyset.  

== Sharding ==

Distributing the dataset across multiple servers is easy in Redis, as in any other key-value store.

For example the Ruby client supports consistent hashing out of the box, where you can specify multiple servers and the library will take care of hashing the key and put different keys into different Redis servers.

With client libraries not supporting consistent hashing you can do different things, like hashing the keys yourself, splitig different keys ranges into different servers, or define whatever policy is useful to you.

== Simple to Setup and Manage ==

Installing Redis requires little more than downloading, uncompressing and running make. Management is near zero, so you can start using Redis in a matter of minutes.

== Portable ==

Redis is written in ANSI C and works in most POSIX systems like Linux, BSD, Mac OS X, Solaris, and so on. Redis is free software released under the very liberal BSD license. Redis is reported to compile and work under WIN32 if compiled with Cygwin, but there is no official support for Windows currently.