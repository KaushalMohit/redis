= LREM _key_ _count_ _value_ =
_Time complexity: O(N) (with N being the length of the list)_

 Remove the first _count_ occurrences of the _value_ element from the list.
 If _count_ is zero all the elements are removed. If _count_ is negative
 elements are removed from tail to head, instead to go from head to tail
 that is the normal behaviour. So for example LREM with count -2 and
 _hello_ as value to remove against the list (a,b,c,hello,x,hello,hello) will
 lave the list (a,b,c,hello,x). The number of removed elements is returned
 as an integer, see below for more information aboht the returned value.

== Return value ==

[ReplyTypes Integer Reply], specifically:

{{{
The number of removed elements if the operation succeeded
-1 if the specified key does not exist
-2 if the specified key does not hold a list value
}}}

== See also ==
 * [LlenCommand LLEN]
 * [LrangeCommand LRANGE]
 * [LtrimCommand LTRIM]
 * [LdelCommand LDEL]
 * [LindexCommand LINDEX]
 * [LsetCommand LSET]
